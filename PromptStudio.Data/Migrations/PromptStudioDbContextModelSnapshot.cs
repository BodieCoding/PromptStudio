// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PromptStudio.Data;

#nullable disable

namespace PromptStudio.Data.Migrations
{
    [DbContext(typeof(PromptStudioDbContext))]
    partial class PromptStudioDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PromptStudio.Core.Domain.Collection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.ToTable("Collections");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "A sample collection to get you started",
                            Name = "Sample Collection",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("PromptStudio.Core.Domain.PromptExecution", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AiProvider")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("Cost")
                        .HasColumnType("decimal(10,4)");

                    b.Property<DateTime>("ExecutedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Model")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PromptTemplateId")
                        .HasColumnType("int");

                    b.Property<string>("ResolvedPrompt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Response")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ResponseTimeMs")
                        .HasColumnType("int");

                    b.Property<int?>("TokensUsed")
                        .HasColumnType("int");

                    b.Property<int?>("VariableCollectionId")
                        .HasColumnType("int");

                    b.Property<string>("VariableValues")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ExecutedAt");

                    b.HasIndex("PromptTemplateId");

                    b.HasIndex("VariableCollectionId");

                    b.ToTable("PromptExecutions");
                });

            modelBuilder.Entity("PromptStudio.Core.Domain.PromptTemplate", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CollectionId")
                        .HasColumnType("int");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CollectionId", "Name");

                    b.ToTable("PromptTemplates");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CollectionId = 1,
                            Content = "Please review the following {{language}} code and provide feedback:\n\n```{{language}}\n{{code}}\n```\n\nFocus on:\n- Code quality\n- Performance\n- Security\n- Best practices",
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            Description = "Review code for best practices and improvements",
                            Name = "Code Review",
                            UpdatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("PromptStudio.Core.Domain.PromptVariable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DefaultValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("PromptTemplateId")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PromptTemplateId", "Name")
                        .IsUnique();

                    b.ToTable("PromptVariables");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DefaultValue = "javascript",
                            Description = "Programming language of the code",
                            Name = "language",
                            PromptTemplateId = 1,
                            Type = "Text"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Utc),
                            DefaultValue = "// Paste your code here",
                            Description = "The code to review",
                            Name = "code",
                            PromptTemplateId = 1,
                            Type = "LargeText"
                        });
                });

            modelBuilder.Entity("PromptStudio.Core.Domain.VariableCollection", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("PromptTemplateId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("VariableSets")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Name");

                    b.HasIndex("PromptTemplateId");

                    b.ToTable("VariableCollections");
                });

            modelBuilder.Entity("PromptStudio.Core.Domain.PromptExecution", b =>
                {
                    b.HasOne("PromptStudio.Core.Domain.PromptTemplate", "PromptTemplate")
                        .WithMany("Executions")
                        .HasForeignKey("PromptTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PromptStudio.Core.Domain.VariableCollection", null)
                        .WithMany("Executions")
                        .HasForeignKey("VariableCollectionId");

                    b.Navigation("PromptTemplate");
                });

            modelBuilder.Entity("PromptStudio.Core.Domain.PromptTemplate", b =>
                {
                    b.HasOne("PromptStudio.Core.Domain.Collection", "Collection")
                        .WithMany("PromptTemplates")
                        .HasForeignKey("CollectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Collection");
                });

            modelBuilder.Entity("PromptStudio.Core.Domain.PromptVariable", b =>
                {
                    b.HasOne("PromptStudio.Core.Domain.PromptTemplate", "PromptTemplate")
                        .WithMany("Variables")
                        .HasForeignKey("PromptTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PromptTemplate");
                });

            modelBuilder.Entity("PromptStudio.Core.Domain.VariableCollection", b =>
                {
                    b.HasOne("PromptStudio.Core.Domain.PromptTemplate", "PromptTemplate")
                        .WithMany("VariableCollections")
                        .HasForeignKey("PromptTemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PromptTemplate");
                });

            modelBuilder.Entity("PromptStudio.Core.Domain.Collection", b =>
                {
                    b.Navigation("PromptTemplates");
                });

            modelBuilder.Entity("PromptStudio.Core.Domain.PromptTemplate", b =>
                {
                    b.Navigation("Executions");

                    b.Navigation("VariableCollections");

                    b.Navigation("Variables");
                });

            modelBuilder.Entity("PromptStudio.Core.Domain.VariableCollection", b =>
                {
                    b.Navigation("Executions");
                });
#pragma warning restore 612, 618
        }
    }
}
