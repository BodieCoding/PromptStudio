@page "/prompts/{promptId:int}/variable-collections/{collectionId:int}/execute"
@model PromptStudio.Pages.VariableCollections.ExecuteModel
@{
    ViewData["Title"] = "Batch Execute";
}

<div class="container-fluid">
    <div class="row">
        <div class="col-md-12">
            <div class="mb-4">
                <h2>Batch Execute: @Model.VariableCollection.Name</h2>
                <nav aria-label="breadcrumb">
                    <ol class="breadcrumb">
                        <li class="breadcrumb-item"><a href="/">Home</a></li>
                        <li class="breadcrumb-item"><a href="/prompts/@Model.PromptTemplate.Id/variable-collections">Variable Collections</a></li>
                        <li class="breadcrumb-item active">Execute</li>
                    </ol>
                </nav>
            </div>

            @if (!string.IsNullOrEmpty(Model.Message))
            {
                <div class="alert alert-success alert-dismissible fade show" role="alert">
                    @Model.Message
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            @if (!string.IsNullOrEmpty(Model.ErrorMessage))
            {
                <div class="alert alert-danger alert-dismissible fade show" role="alert">
                    @Model.ErrorMessage
                    <button type="button" class="btn-close" data-bs-dismiss="alert"></button>
                </div>
            }

            <!-- Summary Card -->
            <div class="card mb-4">
                <div class="card-header">
                    <h5 class="card-title mb-0">
                        <i class="bi bi-info-circle"></i> Execution Summary
                    </h5>
                </div>
                <div class="card-body">
                    <div class="row">
                        <div class="col-md-3">
                            <h6>Prompt Template</h6>
                            <p class="mb-0">@Model.PromptTemplate.Name</p>
                        </div>
                        <div class="col-md-3">
                            <h6>Variable Collection</h6>
                            <p class="mb-0">@Model.VariableCollection.Name</p>
                        </div>
                        <div class="col-md-3">
                            <h6>Variable Sets</h6>
                            <p class="mb-0">@Model.VariableCollection.VariableSets.Count sets</p>
                        </div>                        <div class="col-md-3">
                            <div class="d-flex gap-2">
                                <form method="post" class="d-inline">
                                    <button type="submit" class="btn btn-success">
                                        <i class="bi bi-play-fill"></i> Execute All
                                    </button>
                                </form>
                                @if (Model.Results.Any())
                                {
                                    <form method="post" asp-page-handler="ExportResults" class="d-inline">
                                        <button type="submit" class="btn btn-outline-secondary">
                                            <i class="bi bi-download"></i> Export Results
                                        </button>
                                    </form>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Results -->
            @if (Model.Results.Any())
            {
                <div class="card">
                    <div class="card-header d-flex justify-content-between align-items-center">
                        <h5 class="card-title mb-0">
                            <i class="bi bi-list-check"></i> Execution Results
                        </h5>
                        <div>
                            <span class="badge bg-success">@Model.Results.Count(r => r.Success) successful</span>
                            <span class="badge bg-danger">@Model.Results.Count(r => !r.Success) failed</span>
                        </div>
                    </div>
                    <div class="card-body p-0">
                        <div class="table-responsive">
                            <table class="table table-hover mb-0">
                                <thead class="table-light">
                                    <tr>
                                        <th style="width: 50px;">#</th>
                                        <th>Variables</th>
                                        <th>Status</th>
                                        <th>Actions</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @for (int i = 0; i < Model.Results.Count; i++)
                                    {
                                        var result = Model.Results[i];
                                        <tr class="@(result.Success ? "" : "table-danger")">
                                            <td>@(i + 1)</td>
                                            <td>
                                                @foreach (var variable in result.Variables)
                                                {
                                                    <span class="badge bg-light text-dark me-1">
                                                        <strong>@variable.Key:</strong> @variable.Value
                                                    </span>
                                                }
                                            </td>
                                            <td>
                                                @if (result.Success)
                                                {
                                                    <span class="badge bg-success">
                                                        <i class="bi bi-check-lg"></i> Success
                                                    </span>
                                                }
                                                else
                                                {
                                                    <span class="badge bg-danger">
                                                        <i class="bi bi-x-lg"></i> Failed
                                                    </span>
                                                    @if (!string.IsNullOrEmpty(result.ErrorMessage))
                                                    {
                                                        <br><small class="text-danger">@result.ErrorMessage</small>
                                                    }
                                                }
                                            </td>
                                            <td>
                                                @if (result.Success)
                                                {
                                                    <button type="button" class="btn btn-sm btn-outline-primary" 
                                                            data-bs-toggle="modal" data-bs-target="#promptModal@(i)">
                                                        <i class="bi bi-eye"></i> View
                                                    </button>
                                                    <button type="button" class="btn btn-sm btn-outline-secondary" 
                                                            onclick="copyToClipboard('prompt@(i)')">
                                                        <i class="bi bi-clipboard"></i> Copy
                                                    </button>
                                                }
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="card">
                    <div class="card-body text-center py-5">
                        <i class="bi bi-play-circle display-4 text-muted"></i>
                        <h4 class="mt-3">Ready to Execute</h4>
                        <p class="text-muted">Click "Execute All" to run your prompt against all @Model.VariableCollection.VariableSets.Count variable sets.</p>
                    </div>
                </div>
            }

            <!-- Preview of Variable Sets -->
            <div class="card mt-4">
                <div class="card-header">
                    <h6 class="card-title mb-0">
                        <i class="bi bi-table"></i> Variable Sets Preview
                    </h6>
                </div>
                <div class="card-body">
                    <div class="table-responsive">
                        <table class="table table-sm">
                            <thead>
                                <tr>
                                    <th>#</th>
                                    @foreach (var variable in Model.VariableNames)
                                    {
                                        <th>@variable</th>
                                    }
                                </tr>
                            </thead>
                            <tbody>
                                @for (int i = 0; i < Math.Min(5, Model.VariableCollection.VariableSets.Count); i++)
                                {
                                    var variableSet = Model.VariableCollection.VariableSets[i];
                                    <tr>
                                        <td>@(i + 1)</td>
                                        @foreach (var variable in Model.VariableNames)
                                        {
                                            <td>
                                                <span class="text-truncate d-inline-block" style="max-width: 150px;" title="@(variableSet.Variables.GetValueOrDefault(variable, ""))">
                                                    @(variableSet.Variables.GetValueOrDefault(variable, ""))
                                                </span>
                                            </td>
                                        }
                                    </tr>
                                }
                                @if (Model.VariableCollection.VariableSets.Count > 5)
                                {
                                    <tr>
                                        <td colspan="@(Model.VariableNames.Count + 1)" class="text-center text-muted">
                                            ... and @(Model.VariableCollection.VariableSets.Count - 5) more rows
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Modals for viewing resolved prompts -->
@for (int i = 0; i < Model.Results.Count; i++)
{
    var result = Model.Results[i];
    if (result.Success)
    {
        <div class="modal fade" id="promptModal@(i)" tabindex="-1">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">Resolved Prompt - Set @(i + 1)</h5>
                        <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                    </div>
                    <div class="modal-body">
                        <h6>Variables:</h6>
                        @foreach (var variable in result.Variables)
                        {
                            <span class="badge bg-light text-dark me-1">
                                <strong>@variable.Key:</strong> @variable.Value
                            </span>
                        }
                        <hr>
                        <h6>Resolved Prompt:</h6>
                        <div class="bg-light p-3 rounded">
                            <pre id="prompt@(i)" class="mb-0">@result.ResolvedPrompt</pre>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
                        <button type="button" class="btn btn-primary" onclick="copyToClipboard('prompt@(i)')">
                            <i class="bi bi-clipboard"></i> Copy Prompt
                        </button>
                    </div>
                </div>
            </div>
        </div>
    }
}

@section Scripts {
    <script>
        function copyToClipboard(elementId) {
            const element = document.getElementById(elementId);
            const text = element.textContent;
            navigator.clipboard.writeText(text).then(function() {
                // Show a brief success message
                const btn = event.target;
                const originalText = btn.innerHTML;
                btn.innerHTML = '<i class="bi bi-check"></i> Copied!';
                btn.classList.remove('btn-outline-secondary');
                btn.classList.add('btn-success');
                setTimeout(() => {
                    btn.innerHTML = originalText;
                    btn.classList.remove('btn-success');
                    btn.classList.add('btn-outline-secondary');
                }, 1000);
            });
        }
    </script>
}
